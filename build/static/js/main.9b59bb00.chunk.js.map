{"version":3,"sources":["components/Sidebar.jsx","components/Dashboard.jsx","components/Refferl.jsx","components/Report.jsx","components/Logout.jsx","components/JoinNmem.jsx","components/Activation.jsx","components/Widthdrawl.jsx","components/ChangPass.jsx","components/UpdatePro.jsx","components/Transfer.jsx","components/dashboard/ReferalIncome.jsx","components/MyTeam.jsx","components/loginpage/Login.jsx","components/registerpage/Register.jsx","App.js","index.js"],"names":["Link","to","title","icons","exact","activeClassName","icon","Sidebar","style","display","height","overflow","textColor","backgroundColor","prefix","className","color","Dashboard","user","useContext","userContext","username","uid","Date","created_at","toLocaleDateString","Refferl","useState","copied","setCopied","referralCount","type","defaultValue","referralCode","text","onCopy","background","width","FacebookShareButton","url","quote","hashtag","FacebookIcon","size","round","WhatsappShareButton","WhatsappIcon","LinkedinShareButton","LinkedinIcon","TwitterShareButton","TwitterIcon","Report","Logout","history","useHistory","useEffect","axios","post","token","localStorage","getItem","removeItem","push","JoinNmem","useForm","register","handleSubmit","errors","formState","setUserInfo","regsiterUsername","setRegisterUsername","regsiterPhone","setRegisterPhone","regsiterEmail","setRegisterEmail","regsiterAddar","setRegisterAddar","regsiterHeadmem","setRegisterHeadmem","Form","onSubmit","data","method","password","phone","email","aadhar","head","withCredentials","then","response","console","log","Group","controlId","Label","Control","placeholder","required","onChange","e","target","value","name","render","message","minLength","maxLength","Button","variant","Activation","noofid","setNumberOfId","perid","setPerid","Widthdrawl","withdrawl","amount","wallet","main_wallet","ChangPass","currentPassword","setCurrentPassword","newPassword","setnewPassword","reEnterPassword","setReEnterPassword","old_password","new_password","alert","UpdatePro","userInfo","regsiterBankname","setRegisterBankname","regsiterAcountNo","setRegisterAccountNo","regsiterIfsc","setRegisterIfsc","regsiterHolder","setRegisterHolder","regsiterBankbranch","setRegisterBankbranch","JSON","stringify","undefined","bank_name","account_number","account_holder_name","bank_branch","ifsc_code","Transfer","activation_wallet","ReferalIncome","MyTeam","Login","setUsername","setPassword","id","onClick","preventDefault","res","setUser","setItem","CheckLogin","Register","registerName","setRegisterName","regsiterPassword","setRegisterPassword","src","alt","createContext","App","Provider","path","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b59bb00.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    CDBSidebar,\n    CDBSidebarContent,\n    CDBSidebarHeader,\n    CDBSidebarMenu,\n    CDBSidebarMenuItem,\n} from \"cdbreact\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Link = ({ to, title, icons }) => {\n    return (\n          <NavLink\n            exact\n            to={\"/\" + to}\n            activeClassName=\"activeClicked\"\n        >\n            <CDBSidebarMenuItem icon={ icons }>\n                {title}\n            </CDBSidebarMenuItem>\n        </NavLink>\n    )\n}\nconst Sidebar = () => {\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                height: \"cover\",\n                overflow: \"scroll initial\",\n            }}\n        >\n            <CDBSidebar textColor=\"#fff\" backgroundColor=\"#333\">\n\n                <CDBSidebarHeader prefix={<i className=\"fa fa-bars fa-large\"></i>} >\n                    <span className=\"text-decoration-none\" style={{ color: \"inherit\" }}>Logo</span>\n                </CDBSidebarHeader>\n\n                <CDBSidebarContent className=\"sidebar-content\">\n                    <CDBSidebarMenu>\n                        <Link to=\"dashboard\" title=\"Dashboard\" icons=\"columns\" />\n                        <Link to=\"referrals\" title=\"Referrals\" icons=\"user-friends\"/>\n                        <Link to=\"join\" title=\"Join new Member\" icons=\"user-plus\"/>\n                        <Link to=\"update\" title=\"Update Profile\" icons=\"users-cog\"/>\n                        <Link to=\"widthdrawl\" title=\"Widthdrawl\" icons=\"piggy-bank\"/>\n                        <Link to=\"transfer\" title=\"Transfer\" icons=\"exchange-alt\"/>\n                        <Link to=\"myteam\" title=\"My Team\" icons=\"users\"/>\n                        <Link to=\"report\" title=\"Report\" icons=\"chart-bar\"/>\n                        <Link to=\"logout\" title=\"Log out\" icons=\"power-off\"/>\n                    </CDBSidebarMenu>\n                </CDBSidebarContent>\n            </CDBSidebar>\n        </div>\n    );\n};\n\nexport default Sidebar;\n","import {useContext} from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../App.css\";\nimport { userContext } from \"../App\"\n\nfunction Dashboard() {\n    const user = useContext(userContext)\n\n    return (\n        <div>\n            <div className=\"grid-container\">\n                <NavLink\n                    exact\n                    to=\"/dashboard/refarel-income\"\n                    activeClassName=\"activeClicked\"\n                ></NavLink>\n            </div>\n\n            <div className=\"d-flex flex-column\">\n                <div className=\"p-2\">\n                    <h5>Name: { user.user.username }</h5>\n                    <h5>ID: { user.user.uid} </h5>\n                    <h5>Joining Date:{ new Date(user.user.created_at).toLocaleDateString()}</h5>\n                </div>\n            </div>\n            \n            <div className=\"d-flex flex-column\">\n                <div className=\"p-2 text-center\">\n                    <h4>\n                        <b>Offers Provided By Company</b>\n                    </h4>\n                </div>\n            </div>\n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        <div className=\"grid-container d-flex flex-wrap justify-content-center\">\n                            <div className=\"grid-item my-3 py-5 cardRem\">\n                                Refarel Income\n                            </div>\n                            <div className=\"grid-item my-3 py-5 cardRem\">\n                                Joing Income\n                            </div>\n                            <div className=\"grid-item my-3 py-5 cardRem\">\n                                Level Income\n                            </div>\n                            <div className=\"grid-item my-3 py-5 cardRem\">\n                                Total Income\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-sm\">\n                        <div className=\"grid-container d-flex flex-wrap justify-content-center\">\n                            <div className=\"grid-item my-3 py-5 cardRem\">\n                                Main Income{\" \"}\n                            </div>\n                            <div className=\"grid-item my-3 py-5 cardRem\">\n                                Active Income\n                            </div>\n                            <div className=\"grid-item my-3 py-5 cardRem\">\n                                Offer Income\n                            </div>\n                            <div className=\"grid-item my-3 py-5 cardRem\">\n                                Global Income\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;\n","import React, { useState, useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { userContext } from \"../App\"\n\nimport {\n    FacebookShareButton,\n    WhatsappShareButton,\n    LinkedinShareButton,\n    TwitterShareButton,\n    WhatsappIcon,\n    FacebookIcon,\n    LinkedinIcon,\n    TwitterIcon,\n} from \"react-share\";\nimport \"../App.css\";\n\nfunction Refferl() {\n    const user = useContext(userContext)\n    const [copied, setCopied] = useState(false);\n    const shareUrl = \"\"; // TODO: Give Your Personalised URL To Share\n\n    return (\n        <div className=\"\">\n            <div className=\"grid-container\">\n                <NavLink\n                    exact\n                    to=\"/dashboard/refarel-income\"\n                    activeClassName=\"activeClicked\"\n                ></NavLink>\n            </div>\n\n            <div className=\"d-flex p-2 flex-column\">\n                <div className=\"p-2 text-center\">\n                    <h3>\n                        <b>\n                            Total Referrel Count: <span>{ user.user.referralCount }</span>\n                        </b>\n                    </h3>\n                </div>\n                <h5 className=\"p-3\">\n                    Your Referral Link: \n                    <span>\n                        <input\n                            type=\"text\"\n                            defaultValue={ user.user.referralCode }\n\n                        />\n                        <CopyToClipboard\n                            text={user.user.referralCode}\n                            onCopy={() => setCopied(true)}\n                        >\n                            <button>Copy</button>\n                        </CopyToClipboard>\n                        {copied ? (\n                            <span style={{ color: \"red\" }}>Copid</span>\n                        ) : null}\n                    </span>\n                </h5>\n            </div>\n\n            <div\n                style={{\n                    background: \"#fff\",\n                    height: \"100vh\",\n                    width: \"100%\",\n                }}\n            >\n                <h3 className=\"px-5\">Share Now:</h3>\n                <div className=\"d-flex px-5 py-3 mx-5 flex-row\">\n                    <FacebookShareButton\n                        url={shareUrl}\n                        quote={\"Your friend wants to share MLM refferl link.\"}\n                        hashtag={\"#MLM4Life\"}\n                    >\n                        <FacebookIcon size={40} round={true} />\n                        &nbsp;\n                    </FacebookShareButton>\n\n                    <WhatsappShareButton\n                        url={shareUrl}\n                        quote={\"Your friend wants to share MLM refferl link.\"}\n                        hashtag={\"#MLM4Life\"}\n                    >\n                        <WhatsappIcon size={40} round={true} />\n                        &nbsp;\n                    </WhatsappShareButton>\n\n                    <LinkedinShareButton\n                        url={shareUrl}\n                        quote={\"Your friend wants to share MLM refferl link.\"}\n                        hashtag={\"#MLM4Life\"}\n                    >\n                        <LinkedinIcon size={40} round={true} />\n                        &nbsp;\n                    </LinkedinShareButton>\n\n                    <TwitterShareButton\n                        url={shareUrl}\n                        quote={\"Your friend wants to share MLM refferl link.\"}\n                        hashtag={\"#MLM4Life\"}\n                    >\n                        <TwitterIcon size={40} round={true} />\n                        &nbsp;\n                    </TwitterShareButton>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Refferl;\n","import React from \"react\";\n\nfunction Report() {\n    return (\n        <div>\n            <h2>My Report</h2>\n        </div>\n    );\n}\n\nexport default Report;\n","import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nfunction Logout() {\n    let history = useHistory();\n    useEffect(() => {\n        axios.post(\"https://stormy-ridge-27884.herokuapp.com/logout\", { token: localStorage.getItem(\"token\") })\n        localStorage.removeItem(\"token\");\n        history.push(\"/\");\n    }, []);\n    return (\n        <div>\n            <h1>Log Out Successful</h1>\n        </div>\n    );\n}\n\nexport default Logout;\n","import { useState } from \"react\";\nimport React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport axios from \"axios\";\nfunction JoinNmem() {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n    const [userInfo, setUserInfo] = useState();\n    const [regsiterUsername, setRegisterUsername] = useState(\"\");\n    const [regsiterPhone, setRegisterPhone] = useState(\"\");\n    const [regsiterEmail, setRegisterEmail] = useState(\"\");\n    const [regsiterAddar, setRegisterAddar] = useState(\"\");\n    const [regsiterHeadmem, setRegisterHeadmem] = useState(\"\");\n\n    const joinMem = () => {\n        axios({\n            method: \"POST\",\n            data: {\n                username: regsiterUsername,\n                password: \"arnab123\",\n                phone: regsiterPhone,\n                email: regsiterEmail,\n                aadhar: regsiterAddar,\n                head: regsiterHeadmem,\n            },\n            withCredentials: true,\n            url: \"https://stormy-ridge-27884.herokuapp.com/register\",\n        }).then((response) => {\n            console.log(response);\n        });\n    };\n\n    const onSubmit = (data) => {\n        setUserInfo(data);\n        joinMem();\n\n        // console.log(errors);\n    };\n\n    return (\n        <div className=\"join-container\">\n            {/*  <pre>{JSON.stringify(userInfo, undefined, 2)}</pre> */}\n            <h1 className=\"join-head\">Join Members</h1>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"username\"\n                        {...register(\"uname\", {\n                            required: \"Username is required\",\n                        })}\n                        onChange={(e) => setRegisterUsername(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"uname\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                {/* <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"password\"\n                        {...register(\"pass\", {\n                            required: \"password is required\",\n                        })}\n                        onChange={(e) => setRegisterPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"pass\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                /> */}\n                {/* <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>User Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        {...register(\"name\", { required: \"User Name is required\" })}\n                        onChange={(e) => setRegisterName(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"name\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                /> */}\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"phone no\"\n                        {...register(\"phone\", {\n                            required: \"phone no is required\",\n                            minLength: {\n                                value: 10,\n                                message: \"Phone number minimum 10 character\",\n                            },\n                            maxLength: {\n                                value: 10,\n                                message: \"Phone number maximum 10 character\",\n                            },\n                        })}\n                        onChange={(e) => setRegisterPhone(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"phone\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"Enter your Email\"\n                        {...register(\"email\", {\n                            required: \"Email number is required\",\n                        })}\n                        onChange={(e) => setRegisterEmail(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"email\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Aadhar No</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Addhar\"\n                        {...register(\"addhar\", {\n                            required: \"Addhar number is required\",\n\n                            minLength: {\n                                value: 12,\n                                message: \"Addhar number minimum 12 character\",\n                            },\n                            maxLength: {\n                                value: 16,\n                                message: \"Addhar numbe maximum 16 character\",\n                            },\n                        })}\n                        onChange={(e) => setRegisterAddar(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"addhar\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Head Member</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Head member\"\n                        {...register(\"head\", {\n                            required: \"Head Member is required\",\n                        })}\n                        onChange={(e) => setRegisterHeadmem(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"head\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default JoinNmem;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nfunction Activation() {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n    const [userInfo, setUserInfo] = useState();\n    const [noofid, setNumberOfId] = useState(0);\n    const [perid, setPerid] = useState();\n    const onSubmit = (data) => {\n        setUserInfo(data);\n    };\n    return (\n        <div className=\"active-container\">\n            <h1 className=\"active-head\">Activation Wallet Recharge</h1>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Number Of ID: </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        name=\"id\"\n                        placeholder=\"Enter number of id \"\n                        onChange={(e) => setNumberOfId(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Per ID: </Form.Label>\n                    <Form.Control\n                        type=\"number\"\n                        value={perid}\n                        onChange={(e) => setPerid(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Final Amount: </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        name=\"famount\"\n                        defaultValue={noofid * perid}\n                    />\n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default Activation;\n","import { useContext, useEffect } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport Activation from \"./Activation\";\nimport axios from \"axios\";\nimport { userContext } from \"../App\"\n\nfunction Widthdrawl() {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n\n    const user = useContext(userContext)\n\n\n    const onSubmit = (data) => {\n        // setUserInfo(data);\n        withdrawl();\n    };\n\n    useEffect(() => {\n        console.log(user);\n    }, []);\n    const withdrawl = () => {\n        axios({\n            method: \"POST\",\n            data: {\n                username: \"Arnab Biswas\",\n                amount: 10,\n                //amount: 525\n            },\n            withCredentials: true,\n            url: \"https://stormy-ridge-27884.herokuapp.com/withdraw_from_main\",\n        }).then((response) => {\n            console.log(response);\n        });\n    };\n\n    return (\n        <div className=\"withdrawl-container\">\n            <h1 className=\"withd-head\">Withdrawal Balance</h1>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Available Balance</Form.Label>\n                    <Form.Control type=\"text\" defaultValue={user.user.wallet.main_wallet} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Withdrawal Amount</Form.Label>\n                    <Form.Control type=\"text\" />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Final Amount</Form.Label>\n                    <Form.Control type=\"text\" />\n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\">\n                    Withdrawal\n                </Button>\n            </Form>\n            <br />\n            <br />\n            <Activation />\n        </div>\n    );\n}\n\nexport default Widthdrawl;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport axios from \"axios\";\nfunction ChangPass() {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n    const [userInfo, setUserInfo] = useState();\n    const [currentPassword, setCurrentPassword] = useState(\"\");\n    const [newPassword, setnewPassword] = useState(\"\");\n    const [reEnterPassword, setReEnterPassword] = useState(\"\");\n\n    const changePassword = () => {\n        if (newPassword === reEnterPassword) {\n            axios({\n                method: \"POST\",\n                data: {\n                    username: \"Arnab Biswas\",\n                    old_password: currentPassword,\n                    new_password: newPassword,\n                },\n                withCredentials: true,\n                url: \"https://stormy-ridge-27884.herokuapp.com/change_password\",\n            }).then((response) => {\n                console.log(response);\n            });\n            alert(\"Password change Sucessfull\");\n        } else {\n            alert(\"password not match\");\n        }\n    };\n    const onSubmit = (data) => {\n        setUserInfo(data);\n        changePassword();\n    };\n    return (\n        <div className=\"change-container\">\n            {/* <pre>{JSON.stringify(userInfo, undefined, 2)}</pre> */}\n            <h1 className=\"change-head\">Change Password</h1>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Current Password</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter your Current Password \"\n                        {...register(\"cpassword\", {\n                            required: \"Current password is required\",\n                        })}\n                        onChange={(e) => setCurrentPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"cpassword\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>New Password</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter your new password\"\n                        {...register(\"npassword\", {\n                            required: \"Enter your new password\",\n                            maxLength: {\n                                value: 12,\n                                message: \"password maximum 12 character\",\n                            },\n                        })}\n                        onChange={(e) => setnewPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"npassword\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Comfirm Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Comfirmation Password\"\n                        {...register(\"compassword\", {\n                            required: \"Re-enter your password\",\n                        })}\n                        onChange={(e) => setReEnterPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"compassword\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default ChangPass;\n","import ChangPass from \"./ChangPass\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport axios from \"axios\";\nfunction UpdatePro() {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n    const [userInfo, setUserInfo] = useState();\n    const [regsiterBankname, setRegisterBankname] = useState(\"\");\n    const [regsiterAcountNo, setRegisterAccountNo] = useState(\"\");\n    const [regsiterIfsc, setRegisterIfsc] = useState(\"\");\n    const [regsiterHolder, setRegisterHolder] = useState(\"\");\n    const [regsiterBankbranch, setRegisterBankbranch] = useState(\"\");\n    const update = () => {\n        axios({\n            method: \"POST\",\n            data: {\n                username: \"Anupam Roy\",\n                bank_name: regsiterBankname,\n                account_number: regsiterAcountNo,\n                account_holder_name: regsiterHolder,\n                bank_branch: regsiterBankbranch,\n                ifsc_code: regsiterIfsc,\n            },\n            withCredentials: true,\n            url: \"https://stormy-ridge-27884.herokuapp.com/update_bank_info\",\n        }).then((response) => {\n            console.log(response);\n        });\n    };\n    const onSubmit = (data) => {\n        setUserInfo(data);\n        update();\n        // console.log(data);\n        // console.log(errors);\n    };\n\n    return (\n        <div className=\"join-container\">\n            <pre>{JSON.stringify(userInfo, undefined, 2)}</pre>\n            <h1 className=\"update-head\">Update Your Bank Information</h1>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Bank Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"SBI/AXIS/PNB/HDFC\"\n                        {...register(\"bank-name\", {\n                            required: \"Bank Name is required\",\n                        })}\n                        onChange={(e) => setRegisterBankname(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"bank-name\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Account Number</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter your bank account no\"\n                        {...register(\"account\", {\n                            required: \"Account no is required\",\n                        })}\n                        onChange={(e) => setRegisterAccountNo(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"account\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>IFSC Code</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter IFSC code\"\n                        {...register(\"ifsc\", {\n                            required: \"IFSC code is required\",\n                        })}\n                        onChange={(e) => setRegisterIfsc(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"ifsc\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Account Holder Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"holder-name\"\n                        {...register(\"holder-name\", {\n                            required: \"Holder-name is required\",\n                        })}\n                        onChange={(e) => setRegisterHolder(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"holder-name\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Bank Branch</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Branch name\"\n                        {...register(\"branch\", {\n                            required: \"Branch name is required\",\n                        })}\n                        onChange={(e) => setRegisterBankbranch(e.target.value)}\n                    />\n                </Form.Group>\n                <ErrorMessage\n                    errors={errors}\n                    name=\"branch\"\n                    render={({ message }) => <p className=\"error\">{message}</p>}\n                />\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n            <br />\n            <ChangPass></ChangPass>\n        </div>\n    );\n}\n\nexport default UpdatePro;\n","import { useState, useEffect, useContext } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { userContext } from \"../App\"\n\nfunction Transfer() {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n    const onSubmit = (data) => {\n        // setUserInfo(data);\n    };\n\n    const user = useContext(userContext);\n\n    return (\n        <div className=\"trans-container\">\n            <h1 className=\"trans-head\">\n                Transfer: Main Wallet to Activation Wallet{\" \"}\n            </h1>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Main Wallet Balance:</Form.Label>\n                    <Form.Control type=\"text\" name=\"wallet\" value={user.user.wallet.activation_wallet} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Amount: </Form.Label>\n                    <Form.Control type=\"text\" />\n                </Form.Group>\n\n                <Button variant=\"success\" type=\"submit\">\n                    Withdrawal\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default Transfer;\n","import React from \"react\";\n\nfunction ReferalIncome() {\n    return (\n        <div>\n            <h1> Referal Income </h1>\n        </div>\n    );\n}\n\nexport default ReferalIncome;\n","import React from \"react\";\n\nfunction MyTeam() {\n    return (\n        <div>\n            <h1>This My team </h1>\n        </div>\n    );\n}\n\nexport default MyTeam;\n","import { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport \"./login.css\"\nimport axios from 'axios'\nimport { userContext } from '../../App'\n\n\nexport default function Login() {\n    const user = useContext(userContext)\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    let history = useHistory();\n    \n    const CheckLogin = (e) => {\n        e.preventDefault()\n        axios.post('https://stormy-ridge-27884.herokuapp.com/login', {\n            username: username,\n            password: password\n        }).then(res => {\n            if (res.data.user) {\n                user.setUser(res.data.user)\n                localStorage.setItem('token', JSON.stringify(res.data.token))\n                console.log(user.user)\n                history.push(\"/dashboard\");\n            }\n        })\n    }\n    return (\n        <div>\n            <div className=\"wrapper\">\n\t<div className=\"container\">\n\t\t<h1>Welcome</h1>\n\t\t\n\t\t<form className=\"form\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                        />\n                        <input\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n\t\t\t<button\n                            type=\"submit\"\n                            id=\"login-button\"\n                            onClick={(e) => CheckLogin(e)}>\n                    Login\n            </button>\n\t\t</form>\n\t</div>\n\t\n        <ul className=\"bg-bubbles\">\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n            <li></li>\n        </ul>\n    </div>\n    </div>\n    )\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport \"./register.css\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nfunction Register() {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n    const [userInfo, setUserInfo] = useState();\n    const [registerName, setRegisterName] = useState(\"\");\n    const [regsiterEmail, setRegisterEmail] = useState(\"\");\n    const [regsiterPassword, setRegisterPassword] = useState(\"\");\n    const [reEnterPassword, setReEnterPassword] = useState(\"\");\n    const Regis = () => {\n        if (regsiterPassword === reEnterPassword) {\n            axios({\n                method: \"POST\",\n                data: {\n                    name: registerName,\n                    email: regsiterEmail,\n                    password: regsiterPassword,\n                },\n                withCredentials: true,\n                url: \"https://stormy-ridge-27884.herokuapp.com/update_bank_info\",\n            }).then((response) => {\n                console.log(response);\n            });\n            alert(\"Register Successfull\");\n        } else {\n            alert(\"password not match\");\n        }\n    };\n    const onSubmit = (data) => {\n        setUserInfo(data);\n        Regis();\n    };\n    return (\n        <div className=\"\">\n            <div className=\"row featurette sizing d-flex justify-content-center align-items-center\">\n                <div className=\"col-md-5 order-md-1 \">\n                    <img\n                        src=\"https://source.unsplash.com/user/erondu/800x1000\"\n                        alt=\"\"\n                        className=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\"\n                    />\n                </div>\n                <div className=\"col-md-4 order-md-2 mt-5\">\n                    <h5 className=\"text-muted\">Welcome</h5>\n                    <h4 className=\"featurette-heading\">\n                        Register Your Account\n                    </h4>\n                    <div className=\"register ml-5\">\n                        <h1>Register</h1>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Your Name\"\n                            {...register(\"name\", {\n                                required: \"Name is required\",\n                            })}\n                            onChange={(e) => setRegisterName(e.target.value)}\n                        ></input>\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"name\"\n                            render={({ message }) => (\n                                <p className=\"error\">{message}</p>\n                            )}\n                        />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Your Email\"\n                            {...register(\"email\", {\n                                required: \"Email Address is required\",\n                            })}\n                            onChange={(e) => setRegisterEmail(e.target.value)}\n                        ></input>\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"email\"\n                            render={({ message }) => (\n                                <p className=\"error\">{message}</p>\n                            )}\n                        />\n                        <input\n                            type=\"password\"\n                            placeholder=\"Your Password\"\n                            {...register(\"pass\", {\n                                required: \"Password is required\",\n                                minLength: {\n                                    value: 6,\n                                    message: \"password minimum 6 character \",\n                                },\n                                maxLength: {\n                                    value: 12,\n                                    message: \"password maximum 12 character\",\n                                },\n                            })}\n                            onChange={(e) =>\n                                setRegisterPassword(e.target.value)\n                            }\n                        ></input>\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"pass\"\n                            render={({ message }) => (\n                                <p className=\"error\">{message}</p>\n                            )}\n                        />\n                        <input\n                            type=\"password\"\n                            placeholder=\"Re-enter Password \"\n                            {...register(\"rpass\", {\n                                required: \"Re-enter your password\",\n                            })}\n                            onChange={(e) => setReEnterPassword(e.target.value)}\n                        ></input>\n                        <ErrorMessage\n                            errors={errors}\n                            name=\"rpass\"\n                            render={({ message }) => (\n                                <p className=\"error\">{message}</p>\n                            )}\n                        />\n                        <div\n                            className=\"button\"\n                            onClick={handleSubmit(onSubmit)}\n                        >\n                            <Link to=\"/login\">Register</Link>\n                        </div>\n                        <div>or</div>\n                        <div className=\"button\">\n                            <Link to=\"/login\">Login</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Register;\n","import { createContext, useState } from \"react\";\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport { BrowserRouter as Router , Switch, Route} from 'react-router-dom';\nimport Refferl from './components/Refferl';\nimport Report from './components/Report';\nimport Logout from './components/Logout';\nimport JoinNmem from './components/JoinNmem';\nimport Widthdrawl from './components/Widthdrawl';\nimport UpdatePro from './components/UpdatePro';\nimport Transfer from './components/Transfer';\nimport ReferalIncome from './components/dashboard/ReferalIncome';\nimport MyTeam from './components/MyTeam';\nimport Login from './components/loginpage/Login';\nimport Register from './components/registerpage/Register';\n\nconst userContext = createContext();\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  return (\n    <userContext.Provider value={{ user: user, setUser: setUser}}>\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <div className=\"App\">\n        <Sidebar />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/dashboard/refarel-income\" component={ReferalIncome} />\n          <Route exact path=\"/referrals\" component={Refferl} />\n          <Route exact path=\"/report\" component={Report} />\n          <Route exact path=\"/logout\" component={Logout} />\n          <Route exact path=\"/join\" component={JoinNmem} />\n          <Route exact path=\"/widthdrawl\" component={Widthdrawl} />\n          <Route exact path=\"/update\" component={UpdatePro} />\n          <Route exact path=\"/transfer\" component={Transfer} />\n          <Route exact path=\"/referalincome\" component={ReferalIncome} />\n          <Route exact path=\"/myteam\" component={MyTeam} />\n          </div>\n       </Switch>\n      </div>\n      </Router>\n      </userContext.Provider>\n  );\n}\n \nexport default App;\nexport {\n  userContext\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}